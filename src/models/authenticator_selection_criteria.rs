/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.60.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AuthenticatorSelectionCriteria : Used by the Relying Party to specify their requirements for authenticator attributes. Fields use the deprecated \"resident key\" terminology to refer  to client-side discoverable credentials to maintain backwards compatibility with WebAuthn Level 1.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthenticatorSelectionCriteria {
    #[serde(rename = "authenticatorAttachment", skip_serializing_if = "Option::is_none")]
    pub authenticator_attachment: Option<models::AuthenticatorAttachment>,
    #[serde(rename = "requireResidentKey", skip_serializing_if = "Option::is_none")]
    pub require_resident_key: Option<bool>,
    #[serde(rename = "residentKey", skip_serializing_if = "Option::is_none")]
    pub resident_key: Option<models::ResidentKeyRequirement>,
    #[serde(rename = "userVerification", skip_serializing_if = "Option::is_none")]
    pub user_verification: Option<models::UserVerificationRequirement>,
}

impl AuthenticatorSelectionCriteria {
    /// Used by the Relying Party to specify their requirements for authenticator attributes. Fields use the deprecated \"resident key\" terminology to refer  to client-side discoverable credentials to maintain backwards compatibility with WebAuthn Level 1.
    pub fn new() -> AuthenticatorSelectionCriteria {
        AuthenticatorSelectionCriteria {
            authenticator_attachment: None,
            require_resident_key: None,
            resident_key: None,
            user_verification: None,
        }
    }
}

