/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.57.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ImportRequest : Import request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ImportRequest {
    #[serde(rename = "encryptionScheme", skip_serializing_if = "Option::is_none")]
    pub encryption_scheme: Option<String>,
    #[serde(rename = "factor", skip_serializing_if = "Option::is_none")]
    pub factor: Option<i32>,
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<Vec<models::User>>,
    #[serde(rename = "validateDbConstraints", skip_serializing_if = "Option::is_none")]
    pub validate_db_constraints: Option<bool>,
    #[serde(rename = "eventInfo", skip_serializing_if = "Option::is_none")]
    pub event_info: Option<Box<models::EventInfo>>,
}

impl ImportRequest {
    /// Import request.
    pub fn new() -> ImportRequest {
        ImportRequest {
            encryption_scheme: None,
            factor: None,
            users: None,
            validate_db_constraints: None,
            event_info: None,
        }
    }
}

