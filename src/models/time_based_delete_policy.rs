/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.53.3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TimeBasedDeletePolicy : A policy for deleting Users based upon some external criteria.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimeBasedDeletePolicy {
    /// The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.
    #[serde(rename = "enabledInstant", skip_serializing_if = "Option::is_none")]
    pub enabled_instant: Option<i64>,
    #[serde(rename = "numberOfDaysToRetain", skip_serializing_if = "Option::is_none")]
    pub number_of_days_to_retain: Option<i32>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
}

impl TimeBasedDeletePolicy {
    /// A policy for deleting Users based upon some external criteria.
    pub fn new() -> TimeBasedDeletePolicy {
        TimeBasedDeletePolicy {
            enabled_instant: None,
            number_of_days_to_retain: None,
            enabled: None,
        }
    }
}

