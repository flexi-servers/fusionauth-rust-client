/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.55.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReactorStatus : 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReactorStatus {
    #[serde(rename = "advancedIdentityProviders", skip_serializing_if = "Option::is_none")]
    pub advanced_identity_providers: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "advancedLambdas", skip_serializing_if = "Option::is_none")]
    pub advanced_lambdas: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "advancedMultiFactorAuthentication", skip_serializing_if = "Option::is_none")]
    pub advanced_multi_factor_authentication: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "advancedOAuthScopes", skip_serializing_if = "Option::is_none")]
    pub advanced_o_auth_scopes: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "advancedOAuthScopesCustomScopes", skip_serializing_if = "Option::is_none")]
    pub advanced_o_auth_scopes_custom_scopes: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "advancedOAuthScopesThirdPartyApplications", skip_serializing_if = "Option::is_none")]
    pub advanced_o_auth_scopes_third_party_applications: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "advancedRegistration", skip_serializing_if = "Option::is_none")]
    pub advanced_registration: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "applicationMultiFactorAuthentication", skip_serializing_if = "Option::is_none")]
    pub application_multi_factor_authentication: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "applicationThemes", skip_serializing_if = "Option::is_none")]
    pub application_themes: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "breachedPasswordDetection", skip_serializing_if = "Option::is_none")]
    pub breached_password_detection: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "connectors", skip_serializing_if = "Option::is_none")]
    pub connectors: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "entityManagement", skip_serializing_if = "Option::is_none")]
    pub entity_management: Option<models::ReactorFeatureStatus>,
    /// A date without a time-zone in the ISO-8601 calendar system, such as 2007-12-03.
    #[serde(rename = "expiration", skip_serializing_if = "Option::is_none")]
    pub expiration: Option<String>,
    #[serde(rename = "licenseAttributes", skip_serializing_if = "Option::is_none")]
    pub license_attributes: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "licensed", skip_serializing_if = "Option::is_none")]
    pub licensed: Option<bool>,
    #[serde(rename = "scimServer", skip_serializing_if = "Option::is_none")]
    pub scim_server: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "threatDetection", skip_serializing_if = "Option::is_none")]
    pub threat_detection: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "webAuthn", skip_serializing_if = "Option::is_none")]
    pub web_authn: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "webAuthnPlatformAuthenticators", skip_serializing_if = "Option::is_none")]
    pub web_authn_platform_authenticators: Option<models::ReactorFeatureStatus>,
    #[serde(rename = "webAuthnRoamingAuthenticators", skip_serializing_if = "Option::is_none")]
    pub web_authn_roaming_authenticators: Option<models::ReactorFeatureStatus>,
}

impl ReactorStatus {
    /// 
    pub fn new() -> ReactorStatus {
        ReactorStatus {
            advanced_identity_providers: None,
            advanced_lambdas: None,
            advanced_multi_factor_authentication: None,
            advanced_o_auth_scopes: None,
            advanced_o_auth_scopes_custom_scopes: None,
            advanced_o_auth_scopes_third_party_applications: None,
            advanced_registration: None,
            application_multi_factor_authentication: None,
            application_themes: None,
            breached_password_detection: None,
            connectors: None,
            entity_management: None,
            expiration: None,
            license_attributes: None,
            licensed: None,
            scim_server: None,
            threat_detection: None,
            web_authn: None,
            web_authn_platform_authenticators: None,
            web_authn_roaming_authenticators: None,
        }
    }
}

