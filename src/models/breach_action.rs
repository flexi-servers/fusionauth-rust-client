/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.53.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BreachAction {
    #[serde(rename = "Off")]
    Off,
    #[serde(rename = "RecordOnly")]
    RecordOnly,
    #[serde(rename = "NotifyUser")]
    NotifyUser,
    #[serde(rename = "RequireChange")]
    RequireChange,

}

impl std::fmt::Display for BreachAction {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Off => write!(f, "Off"),
            Self::RecordOnly => write!(f, "RecordOnly"),
            Self::NotifyUser => write!(f, "NotifyUser"),
            Self::RequireChange => write!(f, "RequireChange"),
        }
    }
}

impl Default for BreachAction {
    fn default() -> BreachAction {
        Self::Off
    }
}

