/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ExpiryUnit : 
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ExpiryUnit {
    #[serde(rename = "MINUTES")]
    Minutes,
    #[serde(rename = "HOURS")]
    Hours,
    #[serde(rename = "DAYS")]
    Days,
    #[serde(rename = "WEEKS")]
    Weeks,
    #[serde(rename = "MONTHS")]
    Months,
    #[serde(rename = "YEARS")]
    Years,

}

impl std::fmt::Display for ExpiryUnit {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Minutes => write!(f, "MINUTES"),
            Self::Hours => write!(f, "HOURS"),
            Self::Days => write!(f, "DAYS"),
            Self::Weeks => write!(f, "WEEKS"),
            Self::Months => write!(f, "MONTHS"),
            Self::Years => write!(f, "YEARS"),
        }
    }
}

impl Default for ExpiryUnit {
    fn default() -> ExpiryUnit {
        Self::Minutes
    }
}

