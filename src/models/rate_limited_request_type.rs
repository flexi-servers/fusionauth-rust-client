/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RateLimitedRequestType : 
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RateLimitedRequestType {
    #[serde(rename = "FailedLogin")]
    FailedLogin,
    #[serde(rename = "ForgotPassword")]
    ForgotPassword,
    #[serde(rename = "SendEmailVerification")]
    SendEmailVerification,
    #[serde(rename = "SendPasswordless")]
    SendPasswordless,
    #[serde(rename = "SendRegistrationVerification")]
    SendRegistrationVerification,
    #[serde(rename = "SendTwoFactor")]
    SendTwoFactor,

}

impl std::fmt::Display for RateLimitedRequestType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::FailedLogin => write!(f, "FailedLogin"),
            Self::ForgotPassword => write!(f, "ForgotPassword"),
            Self::SendEmailVerification => write!(f, "SendEmailVerification"),
            Self::SendPasswordless => write!(f, "SendPasswordless"),
            Self::SendRegistrationVerification => write!(f, "SendRegistrationVerification"),
            Self::SendTwoFactor => write!(f, "SendTwoFactor"),
        }
    }
}

impl Default for RateLimitedRequestType {
    fn default() -> RateLimitedRequestType {
        Self::FailedLogin
    }
}

