/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.57.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmailPlus {
    #[serde(rename = "emailTemplateId", skip_serializing_if = "Option::is_none")]
    pub email_template_id: Option<uuid::Uuid>,
    #[serde(rename = "maximumTimeToSendEmailInHours", skip_serializing_if = "Option::is_none")]
    pub maximum_time_to_send_email_in_hours: Option<i32>,
    #[serde(rename = "minimumTimeToSendEmailInHours", skip_serializing_if = "Option::is_none")]
    pub minimum_time_to_send_email_in_hours: Option<i32>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
}

impl EmailPlus {
    pub fn new() -> EmailPlus {
        EmailPlus {
            email_template_id: None,
            maximum_time_to_send_email_in_hours: None,
            minimum_time_to_send_email_in_hours: None,
            enabled: None,
        }
    }
}

