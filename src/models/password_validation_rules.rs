/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.50.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// PasswordValidationRules : 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PasswordValidationRules {
    #[serde(rename = "breachDetection", skip_serializing_if = "Option::is_none")]
    pub breach_detection: Option<Box<models::PasswordBreachDetection>>,
    #[serde(rename = "maxLength", skip_serializing_if = "Option::is_none")]
    pub max_length: Option<i32>,
    #[serde(rename = "minLength", skip_serializing_if = "Option::is_none")]
    pub min_length: Option<i32>,
    #[serde(rename = "rememberPreviousPasswords", skip_serializing_if = "Option::is_none")]
    pub remember_previous_passwords: Option<Box<models::RememberPreviousPasswords>>,
    #[serde(rename = "requireMixedCase", skip_serializing_if = "Option::is_none")]
    pub require_mixed_case: Option<bool>,
    #[serde(rename = "requireNonAlpha", skip_serializing_if = "Option::is_none")]
    pub require_non_alpha: Option<bool>,
    #[serde(rename = "requireNumber", skip_serializing_if = "Option::is_none")]
    pub require_number: Option<bool>,
    #[serde(rename = "validateOnLogin", skip_serializing_if = "Option::is_none")]
    pub validate_on_login: Option<bool>,
}

impl PasswordValidationRules {
    /// 
    pub fn new() -> PasswordValidationRules {
        PasswordValidationRules {
            breach_detection: None,
            max_length: None,
            min_length: None,
            remember_previous_passwords: None,
            require_mixed_case: None,
            require_non_alpha: None,
            require_number: None,
            validate_on_login: None,
        }
    }
}

