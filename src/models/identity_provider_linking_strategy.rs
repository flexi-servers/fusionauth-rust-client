/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.50.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// IdentityProviderLinkingStrategy : The IdP behavior when no user link has been made yet.
/// The IdP behavior when no user link has been made yet.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IdentityProviderLinkingStrategy {
    #[serde(rename = "CreatePendingLink")]
    CreatePendingLink,
    #[serde(rename = "Disabled")]
    Disabled,
    #[serde(rename = "LinkAnonymously")]
    LinkAnonymously,
    #[serde(rename = "LinkByEmail")]
    LinkByEmail,
    #[serde(rename = "LinkByEmailForExistingUser")]
    LinkByEmailForExistingUser,
    #[serde(rename = "LinkByUsername")]
    LinkByUsername,
    #[serde(rename = "LinkByUsernameForExistingUser")]
    LinkByUsernameForExistingUser,
    #[serde(rename = "Unsupported")]
    Unsupported,

}

impl ToString for IdentityProviderLinkingStrategy {
    fn to_string(&self) -> String {
        match self {
            Self::CreatePendingLink => String::from("CreatePendingLink"),
            Self::Disabled => String::from("Disabled"),
            Self::LinkAnonymously => String::from("LinkAnonymously"),
            Self::LinkByEmail => String::from("LinkByEmail"),
            Self::LinkByEmailForExistingUser => String::from("LinkByEmailForExistingUser"),
            Self::LinkByUsername => String::from("LinkByUsername"),
            Self::LinkByUsernameForExistingUser => String::from("LinkByUsernameForExistingUser"),
            Self::Unsupported => String::from("Unsupported"),
        }
    }
}

impl Default for IdentityProviderLinkingStrategy {
    fn default() -> IdentityProviderLinkingStrategy {
        Self::CreatePendingLink
    }
}

