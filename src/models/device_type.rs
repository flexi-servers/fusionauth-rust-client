/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.50.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeviceType {
    #[serde(rename = "BROWSER")]
    Browser,
    #[serde(rename = "DESKTOP")]
    Desktop,
    #[serde(rename = "LAPTOP")]
    Laptop,
    #[serde(rename = "MOBILE")]
    Mobile,
    #[serde(rename = "OTHER")]
    Other,
    #[serde(rename = "SERVER")]
    Server,
    #[serde(rename = "TABLET")]
    Tablet,
    #[serde(rename = "TV")]
    Tv,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl ToString for DeviceType {
    fn to_string(&self) -> String {
        match self {
            Self::Browser => String::from("BROWSER"),
            Self::Desktop => String::from("DESKTOP"),
            Self::Laptop => String::from("LAPTOP"),
            Self::Mobile => String::from("MOBILE"),
            Self::Other => String::from("OTHER"),
            Self::Server => String::from("SERVER"),
            Self::Tablet => String::from("TABLET"),
            Self::Tv => String::from("TV"),
            Self::Unknown => String::from("UNKNOWN"),
        }
    }
}

impl Default for DeviceType {
    fn default() -> DeviceType {
        Self::Browser
    }
}

