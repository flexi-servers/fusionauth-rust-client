/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.50.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// PasswordBreachDetection : 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PasswordBreachDetection {
    #[serde(rename = "matchMode", skip_serializing_if = "Option::is_none")]
    pub match_mode: Option<models::BreachMatchMode>,
    #[serde(rename = "notifyUserEmailTemplateId", skip_serializing_if = "Option::is_none")]
    pub notify_user_email_template_id: Option<uuid::Uuid>,
    #[serde(rename = "onLogin", skip_serializing_if = "Option::is_none")]
    pub on_login: Option<models::BreachAction>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
}

impl PasswordBreachDetection {
    /// 
    pub fn new() -> PasswordBreachDetection {
        PasswordBreachDetection {
            match_mode: None,
            notify_user_email_template_id: None,
            on_login: None,
            enabled: None,
        }
    }
}

