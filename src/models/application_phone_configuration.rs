/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.60.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApplicationPhoneConfiguration : Hold application phone configuration for template overrides.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApplicationPhoneConfiguration {
    #[serde(rename = "forgotPasswordTemplateId", skip_serializing_if = "Option::is_none")]
    pub forgot_password_template_id: Option<uuid::Uuid>,
    #[serde(rename = "identityUpdateTemplateId", skip_serializing_if = "Option::is_none")]
    pub identity_update_template_id: Option<uuid::Uuid>,
    #[serde(rename = "loginIdInUseOnCreateTemplateId", skip_serializing_if = "Option::is_none")]
    pub login_id_in_use_on_create_template_id: Option<uuid::Uuid>,
    #[serde(rename = "loginIdInUseOnUpdateTemplateId", skip_serializing_if = "Option::is_none")]
    pub login_id_in_use_on_update_template_id: Option<uuid::Uuid>,
    #[serde(rename = "loginNewDeviceTemplateId", skip_serializing_if = "Option::is_none")]
    pub login_new_device_template_id: Option<uuid::Uuid>,
    #[serde(rename = "loginSuspiciousTemplateId", skip_serializing_if = "Option::is_none")]
    pub login_suspicious_template_id: Option<uuid::Uuid>,
    #[serde(rename = "passwordResetSuccessTemplateId", skip_serializing_if = "Option::is_none")]
    pub password_reset_success_template_id: Option<uuid::Uuid>,
    #[serde(rename = "passwordUpdateTemplateId", skip_serializing_if = "Option::is_none")]
    pub password_update_template_id: Option<uuid::Uuid>,
    #[serde(rename = "passwordlessTemplateId", skip_serializing_if = "Option::is_none")]
    pub passwordless_template_id: Option<uuid::Uuid>,
    #[serde(rename = "setPasswordTemplateId", skip_serializing_if = "Option::is_none")]
    pub set_password_template_id: Option<uuid::Uuid>,
    #[serde(rename = "twoFactorMethodAddTemplateId", skip_serializing_if = "Option::is_none")]
    pub two_factor_method_add_template_id: Option<uuid::Uuid>,
    #[serde(rename = "twoFactorMethodRemoveTemplateId", skip_serializing_if = "Option::is_none")]
    pub two_factor_method_remove_template_id: Option<uuid::Uuid>,
    #[serde(rename = "verificationCompleteTemplateId", skip_serializing_if = "Option::is_none")]
    pub verification_complete_template_id: Option<uuid::Uuid>,
    #[serde(rename = "verificationTemplateId", skip_serializing_if = "Option::is_none")]
    pub verification_template_id: Option<uuid::Uuid>,
}

impl ApplicationPhoneConfiguration {
    /// Hold application phone configuration for template overrides.
    pub fn new() -> ApplicationPhoneConfiguration {
        ApplicationPhoneConfiguration {
            forgot_password_template_id: None,
            identity_update_template_id: None,
            login_id_in_use_on_create_template_id: None,
            login_id_in_use_on_update_template_id: None,
            login_new_device_template_id: None,
            login_suspicious_template_id: None,
            password_reset_success_template_id: None,
            password_update_template_id: None,
            passwordless_template_id: None,
            set_password_template_id: None,
            two_factor_method_add_template_id: None,
            two_factor_method_remove_template_id: None,
            verification_complete_template_id: None,
            verification_template_id: None,
        }
    }
}

