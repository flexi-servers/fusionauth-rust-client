/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.55.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TransactionType : The transaction types for Webhooks and other event systems within FusionAuth.
/// The transaction types for Webhooks and other event systems within FusionAuth.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TransactionType {
    #[serde(rename = "None")]
    None,
    #[serde(rename = "Any")]
    Any,
    #[serde(rename = "SimpleMajority")]
    SimpleMajority,
    #[serde(rename = "SuperMajority")]
    SuperMajority,
    #[serde(rename = "AbsoluteMajority")]
    AbsoluteMajority,

}

impl std::fmt::Display for TransactionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "None"),
            Self::Any => write!(f, "Any"),
            Self::SimpleMajority => write!(f, "SimpleMajority"),
            Self::SuperMajority => write!(f, "SuperMajority"),
            Self::AbsoluteMajority => write!(f, "AbsoluteMajority"),
        }
    }
}

impl Default for TransactionType {
    fn default() -> TransactionType {
        Self::None
    }
}

