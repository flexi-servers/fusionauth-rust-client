/*
 * FusionAuth API
 *
 * This is a FusionAuth server. Find out more at [https://fusionauth.io](https://fusionauth.io). You need to [set up an API key](https://fusionauth.io/docs/v1/tech/apis/authentication#managing-api-keys) in the FusionAuth instance you are using to test out the API calls.
 *
 * The version of the OpenAPI document: 1.51.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReactorFeatureStatus : 
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReactorFeatureStatus {
    #[serde(rename = "ACTIVE")]
    Active,
    #[serde(rename = "DISCONNECTED")]
    Disconnected,
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "DISABLED")]
    Disabled,
    #[serde(rename = "UNKNOWN")]
    Unknown,

}

impl std::fmt::Display for ReactorFeatureStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Active => write!(f, "ACTIVE"),
            Self::Disconnected => write!(f, "DISCONNECTED"),
            Self::Pending => write!(f, "PENDING"),
            Self::Disabled => write!(f, "DISABLED"),
            Self::Unknown => write!(f, "UNKNOWN"),
        }
    }
}

impl Default for ReactorFeatureStatus {
    fn default() -> ReactorFeatureStatus {
        Self::Active
    }
}

